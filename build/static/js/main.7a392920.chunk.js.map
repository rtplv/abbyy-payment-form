{"version":3,"sources":["components/ui/Calendar.jsx","components/ui/FormRow.jsx","components/ui/Option.jsx","panels/payment/fields/Frequency.jsx","panels/payment/fields/Quantity.jsx","panels/payment/fields/Time.jsx","panels/payment/fields/Submit.jsx","panels/payment/paymentRepeatFormActionTypes.js","helpers/date.js","panels/payment/paymentRepeatFormSelectors.js","panels/payment/PaymentRepeatForm.jsx","panels/payment/paymentRepeatFormActions.js","App.js","panels/payment/paymentRepeatFormReducer.js","store/rootReducer.js","store/configureStore.js","index.js"],"names":["Calendar","props","react_default","a","createElement","className","FormRow","formRowProps","cn","title","children","defaultProps","Option","handleChecked","e","_this","onCheck","_this$props","this","checked","name","value","optionProps","type","onChange","PureComponent","PaymentFrequency","state","datePickerShown","handleOptionChecked","onTypeChange","target","handleWeekValueChange","onWeekValueChange","parseInt","handleMonthValueChange","onMonthValueChange","handleShowDatePicker","setState","weekValue","monthValue","components_ui_FormRow","components_ui_Option","id","onClick","components_ui_Calendar","PaymentQuantity","handleValueChange","onChangeValue","handleDateValueChange","onChangeDateValue","timestampValue","Date","getTime","valueByDate","PaymentTime","handleTimeChange","timeValue","PaymentSubmit","handleFormSubmit","onSubmit","dates","shortDatesArr","slice","map","date","idx","key","length","maxCount","PropTypes","number","SET_TIME","getDateLocaleStringByDate","currentYear","getFullYear","day","getDate","monthIdx","getMonth","year","dateString","concat","setDayOfNextWeek","dayOfWeek","distance","getDay","setDate","getQtyByDateValue","paymentRepeatForm","qtyByDateValue","getFormattedDateValue","createSelector","timestamp","month","getDateIntervalRange","freqType","freqMonthValue","freqWeekValue","qtyType","qtyValue","d1","d2","quantity","currentDate","targetDate","Math","floor","timeDiff","abs","ceil","getDaysDifferenceBetweenDates","round","monthQty","i","dateStr","setMonth","push","PaymentRepeatForm","handleFreqTypeChange","handleSetFreqType","handleFreqWeekChange","handleSetFreqWeekValue","handleFreqMonthChange","handleSetFreqMonthValue","handleQtyTypeChange","handleSetQtyType","handleQtyValueChange","handleSetQtyValue","handleQtyDateChange","handleSetQtyByDateValue","handleSetTime","console","log","prevProps","prevState","snapshot","submitDates","formattedQtyByDateValue","fields_Frequency","fields_Quantity","fields_Time","fields_Submit","connect","payload","time","App","panels_payment_PaymentRepeatForm","initialState","now","combineReducers","arguments","undefined","action","Object","objectSpread","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7a392920.chunk.js","sourcesContent":["import React from 'react';\nimport './Calendar.scss';\n\nconst Calendar = props => {\n  return (\n    <div className=\"ui-calendar\">\n      Здесь будет календарь\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './FormRow.scss';\n\nconst FormRow = props => {\n  const formRowProps = {\n    className: cn(\n      'ui-form-row',\n      props.className,\n    )\n  };\n\n  return (\n    <article {...formRowProps}>\n      <h3 className=\"ui-form-row__title\">{props.title}</h3>\n      <div className=\"ui-form-row__body\">\n        {props.children}\n      </div>\n    </article>\n  );\n};\n\nFormRow.defaultProps = {\n  title: 'Выберите значение'\n};\n\nFormRow.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default FormRow;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './Option.scss';\n\nclass Option extends PureComponent {\n  static propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n    className: PropTypes.string,\n    checked: PropTypes.bool,\n    onCheck: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  };\n\n  render() {\n    const {\n      checked,\n      name,\n      value,\n      className,\n      children,\n    } = this.props;\n\n    const optionProps = {\n      className: cn(\n        'ui-option',\n        className,\n      )\n    };\n\n    return (\n      <article {...optionProps}>\n        <label>\n          <input type=\"radio\"\n                 name={name}\n                 value={value}\n                 checked={checked}\n                 onChange={this.handleChecked} />\n          {children}\n        </label>\n      </article>\n    );\n  }\n\n  handleChecked = e => {\n    if (this.props.onCheck) {\n      this.props.onCheck(e);\n    }\n  }\n}\n\nexport default Option;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Frequency.scss';\n\nimport {\n  FormRow,\n  Option,\n  Calendar\n} from 'components/ui';\n\nclass PaymentFrequency extends PureComponent {\n  static propTypes = {\n    type: PropTypes.string,\n\n    weekValue: PropTypes.number,\n    monthValue: PropTypes.number,\n\n    onTypeChange: PropTypes.func,\n    onWeekValueChange: PropTypes.func,\n    onMonthValueChange: PropTypes.func,\n  };\n\n  state = {\n    datePickerShown: false,\n  };\n\n  render() {\n    const {\n      type,\n      weekValue,\n      monthValue\n    } = this.props;\n    const { datePickerShown } = this.state;\n\n    return (\n      <FormRow className=\"payment-repeat-frequency\"\n               title=\"Частота\">\n        <Option className=\"payment-repeat-frequency__option\"\n                name=\"frequency\"\n                value=\"weekly\"\n                checked={type === 'weekly'}\n                onCheck={this.handleOptionChecked}>\n          <span className=\"payment-repeat-frequency__label\">\n            еженедельно в\n          </span>\n\n          <select name=\"weekDay\"\n                  value={weekValue}\n                  onChange={this.handleWeekValueChange}\n                  id=\"weekDay\">\n            <option value=\"0\">понедельник</option>\n            <option value=\"1\">вторник</option>\n            <option value=\"2\">среда</option>\n            <option value=\"3\">четверг</option>\n            <option value=\"4\">пятница</option>\n            <option value=\"5\">суббота</option>\n            <option value=\"6\">воскресенье</option>\n          </select>\n\n        </Option>\n        <Option className=\"payment-repeat-frequency__option\"\n                name=\"frequency\"\n                value=\"monthly\"\n                checked={type === 'monthly'}\n                onCheck={this.handleOptionChecked}>\n          <span className=\"payment-repeat-frequency__label\">\n            ежемесячно\n          </span>\n\n          <select name=\"monthQty\"\n                  onChange={this.handleMonthValueChange}\n                  value={monthValue}\n                  id=\"monthQty\">\n            <option value=\"1\">1</option>\n            <option value=\"3\">3</option>\n            <option value=\"6\">6</option>\n            <option value=\"12\">12</option>\n          </select>\n        </Option>\n        <div className=\"payment-repeat-frequency__dates-selector\">\n          <button className=\"ui-pseudo-button\"\n                  onClick={this.handleShowDatePicker}>\n            Выбрать даты\n          </button>\n          {datePickerShown && <Calendar />}\n        </div>\n      </FormRow>\n    );\n  }\n\n  handleOptionChecked = e => {\n    if (this.props.onTypeChange) {\n      this.props.onTypeChange(e.target.value);\n    }\n  };\n\n  handleWeekValueChange = e => {\n    if (this.props.onWeekValueChange) {\n      this.props.onWeekValueChange(\n        parseInt(e.target.value, 10)\n      );\n    }\n  };\n\n  handleMonthValueChange = e => {\n    if (this.props.onMonthValueChange) {\n      this.props.onMonthValueChange(\n        parseInt(e.target.value, 10)\n      );\n    }\n  };\n\n  handleShowDatePicker = e => {\n    this.setState(state => ({\n      datePickerShown: !state.datePickerShown,\n    }))\n  }\n}\n\nexport default PaymentFrequency;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Quantity.scss';\n\nimport { FormRow, Option } from 'components/ui';\n\nclass PaymentQuantity extends PureComponent {\n  static propTypes = {\n    type: PropTypes.string,\n\n    value: PropTypes.number,\n    valueByDate: PropTypes.string,\n\n    onTypeChange: PropTypes.func,\n    onChangeValue: PropTypes.func,\n    onChangeDateValue: PropTypes.func,\n  };\n\n  render() {\n    const {\n      type,\n      value,\n      valueByDate,\n    } = this.props;\n\n    return (\n      <FormRow className=\"payment-repeat-quantity\"\n               title=\"Кол-во\">\n        <div className=\"payment-repeat-quantity__options\">\n          <Option className=\"payment-repeat-quantity__option\"\n                  name=\"quantity\"\n                  value=\"unlimited\"\n                  checked={type === 'unlimited'}\n                  onCheck={this.handleOptionChecked}>\n            неограничено\n          </Option>\n\n          <Option className=\"payment-repeat-quantity__option\"\n                  name=\"quantity\"\n                  value=\"byQty\"\n                  checked={type === 'byQty'}\n                  onCheck={this.handleOptionChecked}>\n            <input className=\"payment-repeat-quantity__limited-by-qty-field\"\n                   value={value}\n                   onChange={this.handleValueChange}\n                   type=\"text\"/>\n\n            раза\n          </Option>\n\n          <Option className=\"payment-repeat-quantity__option\"\n                  name=\"quantity\"\n                  value=\"byDate\"\n                  checked={type === 'byDate'}\n                  onCheck={this.handleOptionChecked}>\n            до\n\n            <input className=\"payment-repeat-quantity__limited-by-date-field\"\n                   value={valueByDate}\n                   onChange={this.handleDateValueChange}\n                   type=\"date\"/>\n          </Option>\n        </div>\n      </FormRow>\n    );\n  }\n\n  handleValueChange = e => {\n    if (this.props.onChangeValue) {\n      const value = e.target.value ? parseInt(e.target.value, 10) : 0;\n\n      this.props.onChangeValue(value);\n    }\n  };\n\n  handleDateValueChange = e => {\n    if (!e.target.value) return;\n    if (this.props.onChangeDateValue) {\n      const timestampValue = new Date(e.target.value).getTime();\n      this.props.onChangeDateValue(timestampValue);\n    }\n  };\n\n  handleOptionChecked = e => {\n    if (this.props.onTypeChange) {\n      this.props.onTypeChange(e.target.value);\n    }\n  };\n}\n\nexport default PaymentQuantity;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Time.scss';\n\nimport { FormRow } from 'components/ui';\n\nclass PaymentTime extends PureComponent {\n  static propTypes = {\n    timeValue: PropTypes.string,\n    onChange: PropTypes.func,\n  };\n\n  render() {\n    const { timeValue } = this.props;\n\n    return (\n      <FormRow className=\"payment-repeat-time\"\n               title=\"Время\">\n        <input className=\"payment-repeat-time__field\"\n               type=\"time\"\n               value={timeValue}\n               onChange={this.handleTimeChange} />\n        <span className=\"payment-repeat-time__description\">\n          (+4 UTC, время московское)\n        </span>\n      </FormRow>\n    );\n  }\n\n  handleTimeChange = e => {\n    const { value } = e.target;\n\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  }\n}\n\nexport default PaymentTime;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Submit.scss';\n\nimport { FormRow } from 'components/ui';\n\nclass PaymentSubmit extends PureComponent {\n  static propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.string),\n    onSubmit: PropTypes.func,\n  };\n\n  static defaultProps = {\n    maxCount: PropTypes.number,\n  };\n\n  render() {\n    const { dates } = this.props;\n    const shortDatesArr = dates.slice(0, 5);\n\n    return (\n      <FormRow className=\"payment-repeat-submit\"\n               title=\"Сработает\">\n        {shortDatesArr.map((date, idx) => (\n          <span className=\"payment-repeat-submit__date\"\n                key={date + idx}>\n            {date}\n          </span>\n        ))}\n\n        {dates.length >= 6 && <span className=\"payment-repeat-submit__repeater\">-//-//-</span>}\n\n        <button className=\"ui-button payment-repeat-submit__button\"\n                onClick={this.handleFormSubmit}\n                type=\"submit\">Сохранить</button>\n      </FormRow>\n    );\n  }\n\n  handleFormSubmit = () => {\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  }\n}\n\nexport default PaymentSubmit;\n","export const SET_FREQ_TYPE = 'paymentRepeatForm/SET_FREQ_TYPE';\nexport const SET_FREQ_WEEK_VALUE = 'paymentRepeatForm/SET_FREQ_WEEK_VALUE';\nexport const SET_FREQ_MONTH_VALUE = 'paymentRepeatForm/SET_FREQ_MONTH_VALUE';\n\nexport const SET_QTY_TYPE = 'paymentRepeatForm/SET_QTY_TYPE';\nexport const SET_QTY_VALUE = 'paymentRepeatForm/SET_QTY_VALUE';\nexport const SET_QTY_BY_DATE_VALUE = 'paymentRepeatForm/SET_QTY_BY_DATE_VALUE';\n\nexport const SET_TIME = 'paymentRepeatForm/SET_TIME';\n","export const getMonthsDifferenceBetweenDates = (d1, d2) => {\n  let months;\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\n  months -= d1.getMonth() + 1;\n  months += d2.getMonth();\n  return months <= 0 ? 0 : months;\n};\nexport const getWeeksDifferenceBetweenDates = (d1, d2) =>\n  Math.round((d2 - d1) / (7 * 24 * 60 * 60 * 1000));\n\nexport const getDaysDifferenceBetweenDates = (d1, d2) =>{\n  const timeDiff = Math.abs(d1.getTime() - d2.getTime());\n  return Math.ceil(timeDiff / (1000 * 3600 * 24));\n};\n\n/**\n * Return locale string with check current year condition\n * @param date\n * @returns {string}\n */\nexport const getDateLocaleStringByDate = date => {\n  const localeMonths = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\",\n    \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"\n  ];\n  const currentYear = new Date().getFullYear();\n\n  const day = date.getDate();\n  const monthIdx = date.getMonth();\n  const year = date.getFullYear();\n\n  let dateString = `${day} ${localeMonths[monthIdx]}`;\n\n  if (currentYear !== date.getFullYear()) {\n    dateString = dateString + ` ${year}`;\n  }\n\n  return dateString;\n};\n\n/**\n * Set day of next week\n * @param date\n * @param dayOfWeek\n * @return Date\n */\nexport const setDayOfNextWeek = (date, dayOfWeek) => {\n  const distance = (dayOfWeek + 7 - date.getDay()) % 7;\n\n  date.setDate(date.getDate() + distance + 1);\n\n  return date;\n};\n\nexport const increaseDateByMonth = (date, monthQty) => {\n  date.setMonth(date.getMonth() + monthQty);\n\n  return date;\n};\n\n","import { createSelector } from 'reselect';\nimport {\n    getMonthsDifferenceBetweenDates,\n    getWeeksDifferenceBetweenDates,\n    getDaysDifferenceBetweenDates,\n    increaseDateByMonth,\n    setDayOfNextWeek,\n    getDateLocaleStringByDate,\n} from 'helpers/date';\n\nconst getFreqType = state => state.paymentRepeatForm.freqType;\nconst getFreqMonthValue = state => state.paymentRepeatForm.freqMonthValue;\nconst getFreqWeekValue = state => state.paymentRepeatForm.freqWeekValue;\n\nconst getQtyType = state => state.paymentRepeatForm.qtyType;\nconst getQtyValue = state => state.paymentRepeatForm.qtyValue;\nconst getQtyByDateValue = state => state.paymentRepeatForm.qtyByDateValue;\n\nconst getTimeValue = state => state.paymentRepeatForm.timeValue;\n\n// Covert timestamp to compatible input date value\nexport const getFormattedDateValue = createSelector(\n  getQtyByDateValue,\n  timestamp => {\n    const date = new Date(timestamp);\n\n    const day = date.getDate();\n    const month = `0${date.getMonth() + 1}`.slice(-2);\n    const year = date.getFullYear();\n\n    return `${year}-${month}-${day}`;\n  },\n);\n\n// Return range formatted dates\nexport const getDateIntervalRange = createSelector(\n    getFreqType,\n    getFreqMonthValue,\n    getFreqWeekValue,\n    getQtyType,\n    getQtyValue,\n    getQtyByDateValue,\n    getTimeValue,\n  (freqType, freqMonthValue, freqWeekValue, qtyType, qtyValue, qtyByDateValue, timeValue) => {\n    let dates = [];\n    let quantity = 0;\n\n    // get quantity by selected qtyType\n    switch(qtyType) {\n        case 'unlimited':\n            quantity = 7;\n            break;\n        case 'byQty':\n            quantity = qtyValue;\n            break;\n        case 'byDate':\n            const currentDate = new Date();\n            const targetDate = new Date(qtyByDateValue);\n\n            quantity = freqType === 'monthly' ?\n              Math.floor(getDaysDifferenceBetweenDates(currentDate, targetDate) / 31) :\n              getWeeksDifferenceBetweenDates(currentDate, targetDate);\n            break;\n    }\n\n    let currentDate = new Date();\n\n    for(let i = 0; i < quantity; i++) {\n        let dateStr = '';\n\n        switch (freqType) {\n            case 'weekly':\n                currentDate = setDayOfNextWeek(currentDate, freqWeekValue);\n                dateStr += getDateLocaleStringByDate(currentDate);\n                break;\n            case 'monthly':\n                currentDate = increaseDateByMonth(currentDate, freqMonthValue);\n                dateStr += getDateLocaleStringByDate(currentDate);\n                break;\n        }\n\n        if (i === 0) dateStr += ` ${timeValue}`;\n\n        dates.push(dateStr);\n    }\n\n    return dates;\n  },\n);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './PaymentRepeatForm.scss';\n\nimport {\n  PaymentFrequency,\n  PaymentQuantity,\n  PaymentTime,\n  PaymentSubmit,\n} from './fields';\n\nimport {\n  handleSetFreqType,\n  handleSetFreqMonthValue,\n  handleSetFreqWeekValue,\n\n  handleSetQtyType,\n  handleSetQtyValue,\n  handleSetQtyByDateValue,\n\n  handleSetTime,\n} from './paymentRepeatFormActions';\n\nimport {\n  getFormattedDateValue,\n  getDateIntervalRange\n} from './paymentRepeatFormSelectors';\n\nclass PaymentRepeatForm extends PureComponent {\n  static propTypes = {\n    // from store\n    handleSetFreqType: PropTypes.func,\n    handleSetFreqMonthValue: PropTypes.func,\n    handleSetFreqWeekValue: PropTypes.func,\n\n    handleSetQtyType: PropTypes.func,\n    handleSetQtyValue: PropTypes.func,\n    handleSetQtyByDateValue: PropTypes.func,\n\n    handleSetTime: PropTypes.func,\n\n    freqType: PropTypes.string,\n    freqMonthValue: PropTypes.number,\n    freqWeekValue: PropTypes.number,\n\n    qtyType: PropTypes.string,\n    qtyValue: PropTypes.number,\n    qtyByDateValue: PropTypes.number,\n\n    timeValue: PropTypes.string,\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(this.props.submitDates);\n  }\n\n  render() {\n    const {\n      freqType,\n      freqMonthValue,\n      freqWeekValue,\n\n      qtyType,\n      qtyValue,\n      qtyByDateValue,\n      formattedQtyByDateValue,\n\n      timeValue,\n      submitDates,\n    } = this.props;\n\n    return (\n      <section className=\"payment-repeat-form\">\n        <div className=\"payment-repeat-form__header\">\n          <h1>Настройка и повтор платежей</h1>\n        </div>\n        <div  className=\"payment-repeat-form__body\">\n          <PaymentFrequency type={freqType}\n                            monthValue={freqMonthValue}\n                            weekValue={freqWeekValue}\n                            onTypeChange={this.handleFreqTypeChange}\n                            onMonthValueChange={this.handleFreqMonthChange}\n                            onWeekValueChange={this.handleFreqWeekChange} />\n\n          <PaymentQuantity type={qtyType}\n                           value={qtyValue}\n                           valueByDate={formattedQtyByDateValue}\n                           onTypeChange={this.handleQtyTypeChange}\n                           onChangeValue={this.handleQtyValueChange}\n                           onChangeDateValue={this.handleQtyDateChange} />\n\n          <PaymentTime timeValue={timeValue}\n                       onChange={this.handleTimeChange} />\n\n          <PaymentSubmit dates={submitDates}\n                         onSubmit={this.handleFormSubmit}/>\n        </div>\n      </section>\n    );\n  }\n\n  handleFreqTypeChange = value => {\n    this.props.handleSetFreqType(value);\n  };\n  handleFreqWeekChange = value => {\n    this.props.handleSetFreqWeekValue(value);\n  };\n  handleFreqMonthChange = value => {\n    this.props.handleSetFreqMonthValue(value);\n  };\n\n  handleQtyTypeChange = value => {\n    this.props.handleSetQtyType(value);\n  };\n  handleQtyValueChange = value => {\n    this.props.handleSetQtyValue(value);\n  };\n  handleQtyDateChange = value => {\n    this.props.handleSetQtyByDateValue(value);\n  };\n\n  handleTimeChange = value => {\n    this.props.handleSetTime(value);\n  };\n\n  handleFormSubmit = e => {\n    console.log('Сохранено.');\n  }\n}\n\nexport default connect(state => ({\n  freqType: state.paymentRepeatForm.freqType,\n  freqMonthValue: state.paymentRepeatForm.freqMonthValue,\n  freqWeekValue: state.paymentRepeatForm.freqWeekValue,\n\n  qtyType: state.paymentRepeatForm.qtyType,\n  qtyValue: state.paymentRepeatForm.qtyValue,\n  qtyByDateValue: state.paymentRepeatForm.qtyByDateValue,\n  formattedQtyByDateValue: getFormattedDateValue(state),\n\n  submitDates: getDateIntervalRange(state),\n\n  timeValue: state.paymentRepeatForm.timeValue,\n}), {\n  handleSetFreqType,\n  handleSetFreqMonthValue,\n  handleSetFreqWeekValue,\n\n  handleSetQtyType,\n  handleSetQtyValue,\n  handleSetQtyByDateValue,\n\n  handleSetTime,\n})(PaymentRepeatForm);\n","import {\n  SET_FREQ_TYPE,\n  SET_FREQ_WEEK_VALUE,\n  SET_FREQ_MONTH_VALUE,\n\n  SET_QTY_TYPE,\n  SET_QTY_VALUE,\n  SET_QTY_BY_DATE_VALUE,\n\n  SET_TIME\n} from './paymentRepeatFormActionTypes';\n\n\nexport const handleSetFreqType = freqType => ({\n  type: SET_FREQ_TYPE,\n  payload: freqType,\n});\nexport const handleSetFreqWeekValue = value => ({\n  type: SET_FREQ_WEEK_VALUE,\n  payload: value,\n});\nexport const handleSetFreqMonthValue = value => ({\n  type: SET_FREQ_MONTH_VALUE,\n  payload: value,\n});\n\nexport const handleSetQtyType = qtyType => ({\n  type: SET_QTY_TYPE,\n  payload: qtyType,\n});\nexport const handleSetQtyValue = qtyValue => ({\n  type: SET_QTY_VALUE,\n  payload: qtyValue,\n});\nexport const handleSetQtyByDateValue = qtyValue => ({\n  type: SET_QTY_BY_DATE_VALUE,\n  payload: qtyValue,\n});\n\nexport const handleSetTime = time => ({\n  type: SET_TIME,\n  payload: time,\n});\n","import React from 'react';\nimport PaymentRepeatForm from './panels/payment/PaymentRepeatForm';\n\nfunction App() {\n  return (\n    <main className=\"app-page\">\n      <PaymentRepeatForm />\n    </main>\n  );\n}\n\nexport default App;\n","import {\n  SET_FREQ_TYPE,\n  SET_FREQ_MONTH_VALUE,\n  SET_FREQ_WEEK_VALUE,\n\n  SET_QTY_TYPE,\n  SET_QTY_VALUE,\n  SET_QTY_BY_DATE_VALUE,\n\n  SET_TIME\n} from './paymentRepeatFormActionTypes';\n\nconst initialState = {\n  freqType: 'weekly',\n  freqMonthValue: 1,\n  freqWeekValue: 0,\n\n  qtyType: 'unlimited',\n  qtyValue: 1,\n  qtyByDateValue: Date.now(),\n\n  timeValue: '00:00',\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_FREQ_TYPE:\n      return {\n        ...state,\n        freqType: payload,\n      };\n    case SET_FREQ_MONTH_VALUE:\n      return {\n        ...state,\n        freqMonthValue: payload\n      };\n    case SET_FREQ_WEEK_VALUE:\n      return {\n        ...state,\n        freqWeekValue: payload\n      };\n    case SET_QTY_TYPE:\n      return {\n        ...state,\n        qtyType: payload,\n      };\n    case SET_QTY_VALUE:\n      return {\n        ...state,\n        qtyValue: payload\n      };\n    case SET_QTY_BY_DATE_VALUE:\n      return {\n        ...state,\n        qtyByDateValue: payload\n      };\n    case SET_TIME:\n      return {\n        ...state,\n        timeValue: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport paymentRepeatFormReducer from 'panels/payment/paymentRepeatFormReducer';\n\nexport default combineReducers({\n  paymentRepeatForm: paymentRepeatFormReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\n\nimport rootReducer from './rootReducer';\n\nconst isDev = process.env.NODE_ENV !== 'production';\nconst middlewares = isDev ? applyMiddleware(logger) : null;\n\nexport const store = createStore(\n  rootReducer,\n  isDev ? composeWithDevTools(middlewares) : middlewares,\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles/main.scss';\n\nimport App from './App';\nimport { store } from 'store/configureStore';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}